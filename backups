--
-- PostgreSQL database dump
--

-- Dumped from database version 15.1
-- Dumped by pg_dump version 15.1

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: uni; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA uni;


ALTER SCHEMA uni OWNER TO postgres;

--
-- Name: pgcrypto; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS pgcrypto WITH SCHEMA uni;


--
-- Name: EXTENSION pgcrypto; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION pgcrypto IS 'cryptographic functions';


SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: attendence; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.attendence (
    stu_id character varying(9) NOT NULL,
    se_id character varying(8) NOT NULL,
    cou_id character varying(8) NOT NULL,
    lec_date timestamp without time zone NOT NULL
);


ALTER TABLE public.attendence OWNER TO postgres;

--
-- Name: course; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.course (
    course_id character varying(8) NOT NULL,
    title character varying(50),
    dept_name character varying(20),
    credits numeric(2,0),
    CONSTRAINT course_credits_check CHECK ((credits > (0)::numeric))
);


ALTER TABLE public.course OWNER TO postgres;

--
-- Name: department; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.department (
    dept_name character varying(20) NOT NULL,
    building character varying(15),
    budget numeric(12,2),
    CONSTRAINT department_budget_check CHECK ((budget > (0)::numeric))
);


ALTER TABLE public.department OWNER TO postgres;

--
-- Name: section; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.section (
    course_id character varying(8) NOT NULL,
    sec_id character varying(8) NOT NULL,
    semester character varying(6) NOT NULL,
    year numeric(4,0) NOT NULL,
    building character varying(15),
    room_number character varying(7),
    time_slot character varying(4),
    CONSTRAINT section_semester_check CHECK (((semester)::text = ANY ((ARRAY['Fall'::character varying, 'Winter'::character varying, 'Spring'::character varying, 'Summer'::character varying])::text[]))),
    CONSTRAINT section_year_check CHECK (((year > (1701)::numeric) AND (year < (2100)::numeric)))
);


ALTER TABLE public.section OWNER TO postgres;

--
-- Name: students; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.students (
    id character varying(9) NOT NULL,
    dept_name character varying(15),
    stu_level character varying(15),
    tot_cred numeric,
    name character varying(255)
);


ALTER TABLE public.students OWNER TO postgres;

--
-- Name: takes; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.takes (
    id character varying(5) NOT NULL,
    course_id character varying(8) NOT NULL,
    sec_id character varying(8) NOT NULL,
    semester character varying(6) NOT NULL,
    year numeric(4,0) NOT NULL,
    grade character varying(2)
);


ALTER TABLE public.takes OWNER TO postgres;

--
-- Name: teacher; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.teacher (
    id character varying(9) NOT NULL,
    name character varying(20) NOT NULL,
    dept_name character varying(20),
    advisor character varying(9) NOT NULL
);


ALTER TABLE public.teacher OWNER TO postgres;

--
-- Name: teaches; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.teaches (
    id character varying(5) NOT NULL,
    course_id character varying(8) NOT NULL,
    sec_id character varying(8) NOT NULL,
    semester character varying(6) NOT NULL,
    year numeric(4,0) NOT NULL
);


ALTER TABLE public.teaches OWNER TO postgres;

--
-- Name: users; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.users (
    user_id character varying(9) NOT NULL,
    username character varying(255) NOT NULL,
    user_role character varying(30) NOT NULL,
    password character varying(100)
);


ALTER TABLE public.users OWNER TO postgres;

--
-- Name: attendence; Type: TABLE; Schema: uni; Owner: postgres
--

CREATE TABLE uni.attendence (
    stu_id character(9) NOT NULL,
    lec_id character varying(5) NOT NULL
);


ALTER TABLE uni.attendence OWNER TO postgres;

--
-- Name: course; Type: TABLE; Schema: uni; Owner: postgres
--

CREATE TABLE uni.course (
    course_id character(8) NOT NULL,
    book_name character varying(50),
    teacher_name character varying(100),
    room character varying(20),
    subject character varying(100)
);


ALTER TABLE uni.course OWNER TO postgres;

--
-- Name: lecture; Type: TABLE; Schema: uni; Owner: postgres
--

CREATE TABLE uni.lecture (
    id character varying(5) NOT NULL,
    course_id character(8) NOT NULL,
    room character varying(20),
    title character varying(50)
);


ALTER TABLE uni.lecture OWNER TO postgres;

--
-- Name: phone_num; Type: TABLE; Schema: uni; Owner: postgres
--

CREATE TABLE uni.phone_num (
    s_id character(9) NOT NULL,
    ph_num character varying(10) NOT NULL
);


ALTER TABLE uni.phone_num OWNER TO postgres;

--
-- Name: students; Type: TABLE; Schema: uni; Owner: postgres
--

CREATE TABLE uni.students (
    id character(9) NOT NULL,
    name character varying(255),
    gender character varying(20),
    majer character varying(50),
    place character varying(50)
);


ALTER TABLE uni.students OWNER TO postgres;

--
-- Name: takes; Type: TABLE; Schema: uni; Owner: postgres
--

CREATE TABLE uni.takes (
    id character(9) NOT NULL,
    course_id character(8) NOT NULL
);


ALTER TABLE uni.takes OWNER TO postgres;

--
-- Name: teacher_assistant; Type: TABLE; Schema: uni; Owner: postgres
--

CREATE TABLE uni.teacher_assistant (
    id character(9) NOT NULL,
    name character varying(100) NOT NULL,
    teache character(8),
    password character varying(255)
);


ALTER TABLE uni.teacher_assistant OWNER TO postgres;

--
-- Data for Name: attendence; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.attendence (stu_id, se_id, cou_id, lec_date) FROM stdin;
\.


--
-- Data for Name: course; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.course (course_id, title, dept_name, credits) FROM stdin;
\.


--
-- Data for Name: department; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.department (dept_name, building, budget) FROM stdin;
\.


--
-- Data for Name: section; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.section (course_id, sec_id, semester, year, building, room_number, time_slot) FROM stdin;
\.


--
-- Data for Name: students; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.students (id, dept_name, stu_level, tot_cred, name) FROM stdin;
\.


--
-- Data for Name: takes; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.takes (id, course_id, sec_id, semester, year, grade) FROM stdin;
\.


--
-- Data for Name: teacher; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.teacher (id, name, dept_name, advisor) FROM stdin;
\.


--
-- Data for Name: teaches; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.teaches (id, course_id, sec_id, semester, year) FROM stdin;
\.


--
-- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.users (user_id, username, user_role, password) FROM stdin;
\.


--
-- Data for Name: attendence; Type: TABLE DATA; Schema: uni; Owner: postgres
--

COPY uni.attendence (stu_id, lec_id) FROM stdin;
120200887	lec70
\.


--
-- Data for Name: course; Type: TABLE DATA; Schema: uni; Owner: postgres
--

COPY uni.course (course_id, book_name, teacher_name, room, subject) FROM stdin;
eele3402	syntax	ahmed saed	i303	champions
ecom3102	python book	wesam ashour	k414	labview
eele3302	php laravel	mohammed habbash	b313	semifinal
eele3322	verilog	basel hamad	m204	europa
ecom4220				
\.


--
-- Data for Name: lecture; Type: TABLE DATA; Schema: uni; Owner: postgres
--

COPY uni.lecture (id, course_id, room, title) FROM stdin;
lec99	eele3302	m204	europa
lec22	ecom4220	c502	quarter
lec34	eele3302	b313	semifinal
lec04	eele3402	i303	champions
lec70	eele3302	m204	europa
lec00	ecom3102	hk	ssdfs
\.


--
-- Data for Name: phone_num; Type: TABLE DATA; Schema: uni; Owner: postgres
--

COPY uni.phone_num (s_id, ph_num) FROM stdin;
120200887	0592294728
120200887	0597058876
\.


--
-- Data for Name: students; Type: TABLE DATA; Schema: uni; Owner: postgres
--

COPY uni.students (id, name, gender, majer, place) FROM stdin;
220200326	sadfas	female	dsaf	dasf
120200000	aa	male	dsaf	asdf
120200887	ahmad nabil humeid	male	comp eng	gaxa
\.


--
-- Data for Name: takes; Type: TABLE DATA; Schema: uni; Owner: postgres
--

COPY uni.takes (id, course_id) FROM stdin;
120200887	eele3302
\.


--
-- Data for Name: teacher_assistant; Type: TABLE DATA; Schema: uni; Owner: postgres
--

COPY uni.teacher_assistant (id, name, teache, password) FROM stdin;
120200887	ahmad	eele3402	$2a$06$/kONmoG86unHr712V2du/u1nzZ09COK342GJwA3Q3D2Q/AtnRK6YC
\.


--
-- Name: attendence attendence_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.attendence
    ADD CONSTRAINT attendence_pkey PRIMARY KEY (stu_id, se_id, cou_id, lec_date);


--
-- Name: course course_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.course
    ADD CONSTRAINT course_pkey PRIMARY KEY (course_id);


--
-- Name: department department_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.department
    ADD CONSTRAINT department_pkey PRIMARY KEY (dept_name);


--
-- Name: section section_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.section
    ADD CONSTRAINT section_pkey PRIMARY KEY (course_id, sec_id, semester, year);


--
-- Name: students students_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.students
    ADD CONSTRAINT students_pkey PRIMARY KEY (id);


--
-- Name: takes takes_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.takes
    ADD CONSTRAINT takes_pkey PRIMARY KEY (id, course_id, sec_id, semester, year);


--
-- Name: teacher teacher_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.teacher
    ADD CONSTRAINT teacher_pkey PRIMARY KEY (id);


--
-- Name: teaches teaches_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.teaches
    ADD CONSTRAINT teaches_pkey PRIMARY KEY (id, course_id, sec_id, semester, year);


--
-- Name: attendence attendence_pkey; Type: CONSTRAINT; Schema: uni; Owner: postgres
--

ALTER TABLE ONLY uni.attendence
    ADD CONSTRAINT attendence_pkey PRIMARY KEY (stu_id, lec_id);


--
-- Name: course course_pkey; Type: CONSTRAINT; Schema: uni; Owner: postgres
--

ALTER TABLE ONLY uni.course
    ADD CONSTRAINT course_pkey PRIMARY KEY (course_id);


--
-- Name: lecture lecture_pkey; Type: CONSTRAINT; Schema: uni; Owner: postgres
--

ALTER TABLE ONLY uni.lecture
    ADD CONSTRAINT lecture_pkey PRIMARY KEY (id);


--
-- Name: phone_num phone_num_pkey; Type: CONSTRAINT; Schema: uni; Owner: postgres
--

ALTER TABLE ONLY uni.phone_num
    ADD CONSTRAINT phone_num_pkey PRIMARY KEY (s_id, ph_num);


--
-- Name: students students_pkey; Type: CONSTRAINT; Schema: uni; Owner: postgres
--

ALTER TABLE ONLY uni.students
    ADD CONSTRAINT students_pkey PRIMARY KEY (id);


--
-- Name: takes takes_pkey; Type: CONSTRAINT; Schema: uni; Owner: postgres
--

ALTER TABLE ONLY uni.takes
    ADD CONSTRAINT takes_pkey PRIMARY KEY (id, course_id);


--
-- Name: teacher_assistant teacher_assistant_pkey; Type: CONSTRAINT; Schema: uni; Owner: postgres
--

ALTER TABLE ONLY uni.teacher_assistant
    ADD CONSTRAINT teacher_assistant_pkey PRIMARY KEY (id);


--
-- Name: attendence attendence_cou_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.attendence
    ADD CONSTRAINT attendence_cou_id_fkey FOREIGN KEY (cou_id) REFERENCES public.course(course_id) ON DELETE CASCADE;


--
-- Name: attendence attendence_stu_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.attendence
    ADD CONSTRAINT attendence_stu_id_fkey FOREIGN KEY (stu_id) REFERENCES public.students(id) ON DELETE CASCADE;


--
-- Name: course course_dept_name_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.course
    ADD CONSTRAINT course_dept_name_fkey FOREIGN KEY (dept_name) REFERENCES public.department(dept_name) ON DELETE SET NULL;


--
-- Name: section section_course_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.section
    ADD CONSTRAINT section_course_id_fkey FOREIGN KEY (course_id) REFERENCES public.course(course_id) ON DELETE CASCADE;


--
-- Name: students students_dept_name_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.students
    ADD CONSTRAINT students_dept_name_fkey FOREIGN KEY (dept_name) REFERENCES public.department(dept_name);


--
-- Name: takes takes_course_id_sec_id_semester_year_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.takes
    ADD CONSTRAINT takes_course_id_sec_id_semester_year_fkey FOREIGN KEY (course_id, sec_id, semester, year) REFERENCES public.section(course_id, sec_id, semester, year) ON DELETE CASCADE;


--
-- Name: takes takes_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.takes
    ADD CONSTRAINT takes_id_fkey FOREIGN KEY (id) REFERENCES public.students(id) ON DELETE CASCADE;


--
-- Name: teacher teacher_dept_name_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.teacher
    ADD CONSTRAINT teacher_dept_name_fkey FOREIGN KEY (dept_name) REFERENCES public.department(dept_name) ON DELETE SET NULL;


--
-- Name: teaches teaches_course_id_sec_id_semester_year_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.teaches
    ADD CONSTRAINT teaches_course_id_sec_id_semester_year_fkey FOREIGN KEY (course_id, sec_id, semester, year) REFERENCES public.section(course_id, sec_id, semester, year) ON DELETE CASCADE;


--
-- Name: teaches teaches_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.teaches
    ADD CONSTRAINT teaches_id_fkey FOREIGN KEY (id) REFERENCES public.teacher(id) ON DELETE CASCADE;


--
-- Name: users users_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.teacher(id) ON DELETE CASCADE;


--
-- Name: attendence attendence_lec_id_fkey; Type: FK CONSTRAINT; Schema: uni; Owner: postgres
--

ALTER TABLE ONLY uni.attendence
    ADD CONSTRAINT attendence_lec_id_fkey FOREIGN KEY (lec_id) REFERENCES uni.lecture(id) ON DELETE CASCADE;


--
-- Name: attendence attendence_stu_id_fkey; Type: FK CONSTRAINT; Schema: uni; Owner: postgres
--

ALTER TABLE ONLY uni.attendence
    ADD CONSTRAINT attendence_stu_id_fkey FOREIGN KEY (stu_id) REFERENCES uni.students(id) ON DELETE CASCADE;


--
-- Name: lecture lecture_course_id_fkey; Type: FK CONSTRAINT; Schema: uni; Owner: postgres
--

ALTER TABLE ONLY uni.lecture
    ADD CONSTRAINT lecture_course_id_fkey FOREIGN KEY (course_id) REFERENCES uni.course(course_id) ON DELETE CASCADE;


--
-- Name: phone_num phone_num_s_id_fkey; Type: FK CONSTRAINT; Schema: uni; Owner: postgres
--

ALTER TABLE ONLY uni.phone_num
    ADD CONSTRAINT phone_num_s_id_fkey FOREIGN KEY (s_id) REFERENCES uni.students(id) ON DELETE CASCADE;


--
-- Name: takes takes_course_id_fkey; Type: FK CONSTRAINT; Schema: uni; Owner: postgres
--

ALTER TABLE ONLY uni.takes
    ADD CONSTRAINT takes_course_id_fkey FOREIGN KEY (course_id) REFERENCES uni.course(course_id) ON DELETE CASCADE;


--
-- Name: takes takes_id_fkey; Type: FK CONSTRAINT; Schema: uni; Owner: postgres
--

ALTER TABLE ONLY uni.takes
    ADD CONSTRAINT takes_id_fkey FOREIGN KEY (id) REFERENCES uni.students(id) ON DELETE CASCADE;


--
-- Name: teacher_assistant teacher_assistant_teache_fkey; Type: FK CONSTRAINT; Schema: uni; Owner: postgres
--

ALTER TABLE ONLY uni.teacher_assistant
    ADD CONSTRAINT teacher_assistant_teache_fkey FOREIGN KEY (teache) REFERENCES uni.course(course_id) ON DELETE SET NULL;


--
-- PostgreSQL database dump complete
--

