--
-- PostgreSQL database dump
--

-- Dumped from database version 15.1
-- Dumped by pg_dump version 15.1

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: uni; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA uni;


ALTER SCHEMA uni OWNER TO postgres;

--
-- Name: pgcrypto; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS pgcrypto WITH SCHEMA uni;


--
-- Name: EXTENSION pgcrypto; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION pgcrypto IS 'cryptographic functions';


SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: attendence; Type: TABLE; Schema: uni; Owner: postgres
--

CREATE TABLE uni.attendence (
    stu_id character(9) NOT NULL,
    lec_id character varying(5) NOT NULL
);


ALTER TABLE uni.attendence OWNER TO postgres;

--
-- Name: course; Type: TABLE; Schema: uni; Owner: postgres
--

CREATE TABLE uni.course (
    course_id character(8) NOT NULL,
    book_name character varying(50),
    teacher_name character varying(100),
    room character varying(20),
    subject character varying(100)
);


ALTER TABLE uni.course OWNER TO postgres;

--
-- Name: lecture; Type: TABLE; Schema: uni; Owner: postgres
--

CREATE TABLE uni.lecture (
    id character varying(5) NOT NULL,
    course_id character(8) NOT NULL,
    room character varying(20),
    title character varying(50)
);


ALTER TABLE uni.lecture OWNER TO postgres;

--
-- Name: phone_num; Type: TABLE; Schema: uni; Owner: postgres
--

CREATE TABLE uni.phone_num (
    s_id character(9) NOT NULL,
    ph_num character varying(10) NOT NULL
);


ALTER TABLE uni.phone_num OWNER TO postgres;

--
-- Name: students; Type: TABLE; Schema: uni; Owner: postgres
--

CREATE TABLE uni.students (
    id character(9) NOT NULL,
    name character varying(255),
    gender character varying(20),
    place character varying(50),
    majer character varying(50)
);


ALTER TABLE uni.students OWNER TO postgres;

--
-- Name: takes; Type: TABLE; Schema: uni; Owner: postgres
--

CREATE TABLE uni.takes (
    id character(9) NOT NULL,
    course_id character(8) NOT NULL
);


ALTER TABLE uni.takes OWNER TO postgres;

--
-- Name: teacher_assistant; Type: TABLE; Schema: uni; Owner: postgres
--

CREATE TABLE uni.teacher_assistant (
    id character(9) NOT NULL,
    name character varying(100) NOT NULL,
    teache character(8),
    password character varying(255)
);


ALTER TABLE uni.teacher_assistant OWNER TO postgres;

--
-- Data for Name: attendence; Type: TABLE DATA; Schema: uni; Owner: postgres
--

COPY uni.attendence (stu_id, lec_id) FROM stdin;
120200291	lec10
220200600	lec34
120200887	lec99
\.


--
-- Data for Name: course; Type: TABLE DATA; Schema: uni; Owner: postgres
--

COPY uni.course (course_id, book_name, teacher_name, room, subject) FROM stdin;
ecom1110	java book	ahmed mahdi	k304	matlab
ecom3102	python book	wesam ashour	k414	labview
ecom4220	asp.net	ahmed mahdi	c502	quarter
eele3302	php laravel	mohammed habbash	b313	semifinal
eele3402	syntax	ahmed saed	i303	champions
eele3322	verilog	basel hamad	m204	europa
\.


--
-- Data for Name: lecture; Type: TABLE DATA; Schema: uni; Owner: postgres
--

COPY uni.lecture (id, course_id, room, title) FROM stdin;
lec54	ecom1110	k304	matlab
lec10	ecom3102	k414	labview
lec22	ecom4220	c502	quarter
lec34	eele3302	b313	semifinal
lec04	eele3402	i303	champions
lec99	eele3302	m204	europa
lec70	eele3302	b313	102
\.


--
-- Data for Name: phone_num; Type: TABLE DATA; Schema: uni; Owner: postgres
--

COPY uni.phone_num (s_id, ph_num) FROM stdin;
120200887	0597058876
120200291	0594096020
120200887	0592294189
220200666	0594022357
220200888	0591234567
220200600	0590000000
\.


--
-- Data for Name: students; Type: TABLE DATA; Schema: uni; Owner: postgres
--

COPY uni.students (id, name, gender, place, majer) FROM stdin;
120200291	yassen	male	5	music
120200887	ahmed	male	2	comp eng
220200666	shahed	female	1	comp eng
220200888	heba	female	gaza	art
220200600	nada	female	a	b
\.


--
-- Data for Name: takes; Type: TABLE DATA; Schema: uni; Owner: postgres
--

COPY uni.takes (id, course_id) FROM stdin;
120200887	eele3302
120200887	ecom3102
120200291	eele3302
220200600	eele3302
\.


--
-- Data for Name: teacher_assistant; Type: TABLE DATA; Schema: uni; Owner: postgres
--

COPY uni.teacher_assistant (id, name, teache, password) FROM stdin;
120200887	ahmad humeid	eele3302	$2a$06$TNXTHd7anmUGsmDRTwu5NOVlOLnCeIeUrFyZoMexEPbCM2ThOLcLK
\.


--
-- Name: attendence attendence_pkey; Type: CONSTRAINT; Schema: uni; Owner: postgres
--

ALTER TABLE ONLY uni.attendence
    ADD CONSTRAINT attendence_pkey PRIMARY KEY (stu_id, lec_id);


--
-- Name: course course_pkey; Type: CONSTRAINT; Schema: uni; Owner: postgres
--

ALTER TABLE ONLY uni.course
    ADD CONSTRAINT course_pkey PRIMARY KEY (course_id);


--
-- Name: lecture lecture_pkey; Type: CONSTRAINT; Schema: uni; Owner: postgres
--

ALTER TABLE ONLY uni.lecture
    ADD CONSTRAINT lecture_pkey PRIMARY KEY (id);


--
-- Name: phone_num phone_num_pkey; Type: CONSTRAINT; Schema: uni; Owner: postgres
--

ALTER TABLE ONLY uni.phone_num
    ADD CONSTRAINT phone_num_pkey PRIMARY KEY (s_id, ph_num);


--
-- Name: students students_pkey; Type: CONSTRAINT; Schema: uni; Owner: postgres
--

ALTER TABLE ONLY uni.students
    ADD CONSTRAINT students_pkey PRIMARY KEY (id);


--
-- Name: takes takes_pkey; Type: CONSTRAINT; Schema: uni; Owner: postgres
--

ALTER TABLE ONLY uni.takes
    ADD CONSTRAINT takes_pkey PRIMARY KEY (id, course_id);


--
-- Name: teacher_assistant teacher_assistant_pkey; Type: CONSTRAINT; Schema: uni; Owner: postgres
--

ALTER TABLE ONLY uni.teacher_assistant
    ADD CONSTRAINT teacher_assistant_pkey PRIMARY KEY (id);


--
-- Name: attendence attendence_lec_id_fkey; Type: FK CONSTRAINT; Schema: uni; Owner: postgres
--

ALTER TABLE ONLY uni.attendence
    ADD CONSTRAINT attendence_lec_id_fkey FOREIGN KEY (lec_id) REFERENCES uni.lecture(id) ON DELETE CASCADE;


--
-- Name: attendence attendence_stu_id_fkey; Type: FK CONSTRAINT; Schema: uni; Owner: postgres
--

ALTER TABLE ONLY uni.attendence
    ADD CONSTRAINT attendence_stu_id_fkey FOREIGN KEY (stu_id) REFERENCES uni.students(id) ON DELETE CASCADE;


--
-- Name: lecture lecture_course_id_fkey; Type: FK CONSTRAINT; Schema: uni; Owner: postgres
--

ALTER TABLE ONLY uni.lecture
    ADD CONSTRAINT lecture_course_id_fkey FOREIGN KEY (course_id) REFERENCES uni.course(course_id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: phone_num phone_num_s_id_fkey; Type: FK CONSTRAINT; Schema: uni; Owner: postgres
--

ALTER TABLE ONLY uni.phone_num
    ADD CONSTRAINT phone_num_s_id_fkey FOREIGN KEY (s_id) REFERENCES uni.students(id) ON DELETE CASCADE;


--
-- Name: takes takes_course_id_fkey; Type: FK CONSTRAINT; Schema: uni; Owner: postgres
--

ALTER TABLE ONLY uni.takes
    ADD CONSTRAINT takes_course_id_fkey FOREIGN KEY (course_id) REFERENCES uni.course(course_id) ON DELETE CASCADE;


--
-- Name: takes takes_id_fkey; Type: FK CONSTRAINT; Schema: uni; Owner: postgres
--

ALTER TABLE ONLY uni.takes
    ADD CONSTRAINT takes_id_fkey FOREIGN KEY (id) REFERENCES uni.students(id) ON DELETE CASCADE;


--
-- Name: teacher_assistant teacher_assistant_teache_fkey; Type: FK CONSTRAINT; Schema: uni; Owner: postgres
--

ALTER TABLE ONLY uni.teacher_assistant
    ADD CONSTRAINT teacher_assistant_teache_fkey FOREIGN KEY (teache) REFERENCES uni.course(course_id) ON UPDATE CASCADE ON DELETE SET NULL;


--
-- PostgreSQL database dump complete
--

